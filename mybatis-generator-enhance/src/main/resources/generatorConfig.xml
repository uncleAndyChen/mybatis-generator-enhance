<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--数据库驱动 在扩展类所在项目直接运行，或者使用自己的扩展类，均不用在该文件中单独配置，因为扩展类所在项目引入了数据库驱动-->
    <!--<classPathEntry location="mysql-connector-java-8.0.13.jar"/>-->
    <!--如果你希望不生成和Example查询有关的内容，那么可以按照如下进行配置:-->
    <context id="Mysql" targetRuntime="mybatis.generator.enhance.IntrospectedTableEnhanceImpl" defaultModelType="flat">
        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!--数据库链接地址账号密码-->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver" connectionURL="jdbc:mysql://localhost:3306/mbg?useSSL=false&amp;serverTimezone=GMT&amp;useUnivalue=true&amp;characterEncoding=utf8&amp;autoReconnect=true&amp;failOverReadOnly=false"
                        userId="root" password="@#$kd3429DAnd">
            <property name="nullCatalogMeansCurrent" value="true"/>
        </jdbcConnection>
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!--生成Model类存放位置-->
        <javaModelGenerator targetPackage="demo.domain.model.entity" targetProject="demo-domain-model/src/main/java/">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!--生成映射文件存放位置-->
        <sqlMapGenerator targetPackage="demo.domain.dal.mapper.xml.original" targetProject="demo-domain-dal/src/main/java/">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!--生成Dao类存放位置
        http://blog.csdn.net/qq_27376871/article/details/51360638
        MyBatis3:
        ANNOTATEDMAPPER: 基于注解的Mapper接口，不会有对应的XML映射文件
        MIXEDMAPPER: XML和注解的混合形式，上面这种情况中的SqlProvider注解方法会被XML替代。
        XMLMAPPER: 所有的方法都在XML中，接口调用依赖XML文件。会生成一个XXX.xml文件内有各种sql语句，是mapper的实现。
        MyBatis3Simple:
        ANNOTATEDMAPPER: 基于注解的Mapper接口，不会有对应的XML映射文件
        XMLMAPPER: 所有的方法都在XML中，接口调用依赖XML文件。
        -->
        <javaClientGenerator type="XMLMAPPER" targetPackage="demo.domain.dal.mapper.original" targetProject="demo-domain-dal/src/main/java/">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>
        <!-- 生成对应表及类名 -->
        <!-- 如何批量自动生成所有表的属性配置？请参考：https://gitee.com/uncleAndyChen/mybatis-generator-enhance/tree/master/boot-create-table-property -->
        <table tableName="sys_dept" domainObjectName="SysDept"><generatedKey identity="true" type="post" column="id" sqlStatement="Mysql"/><columnOverride column="status" javaType="java.lang.Integer" jdbcType="INTEGER" /></table>
        <table tableName="sys_menu" domainObjectName="SysMenu"><generatedKey identity="true" type="post" column="id" sqlStatement="Mysql"/><columnOverride column="status" javaType="java.lang.Integer" jdbcType="INTEGER" /></table>
        <table tableName="sys_menu_action" domainObjectName="SysMenuAction"><generatedKey identity="true" type="post" column="id" sqlStatement="Mysql"/><columnOverride column="status" javaType="java.lang.Integer" jdbcType="INTEGER" /></table>
        <table tableName="sys_menu_resource" domainObjectName="SysMenuResource"><generatedKey identity="true" type="post" column="id" sqlStatement="Mysql"/><columnOverride column="status" javaType="java.lang.Integer" jdbcType="INTEGER" /></table>
        <table tableName="sys_role" domainObjectName="SysRole"><generatedKey identity="true" type="post" column="id" sqlStatement="Mysql"/></table>
        <table tableName="sys_role_menu" domainObjectName="SysRoleMenu"><generatedKey identity="true" type="post" column="id" sqlStatement="Mysql"/></table>
        <table tableName="sys_user" domainObjectName="SysUser"><generatedKey identity="true" type="post" column="id" sqlStatement="Mysql"/><columnOverride column="status" javaType="java.lang.Integer" jdbcType="INTEGER" /></table>
        <table tableName="sys_user_role" domainObjectName="SysUserRole"><generatedKey identity="true" type="post" column="id" sqlStatement="Mysql"/></table>
    </context>
</generatorConfiguration>
<!--
# 注意：*Mapper.xml 文件，每次重新生成都需要先删除，否则部分内容会重复生成，导致错误，版本1.3.5以及现在最新版1.3.7均有此问题。
# 执行之前请确保文件路径是正确的。

# 以下三行执行删除生成的所有文件
del/f/s/q C:\workspace\mybatis-generator\demo-domain-dal\src\main\java\demo\domain\dal\mapper\original\*.*
del/f/s/q C:\workspace\mybatis-generator\demo-domain-dal\src\main\java\demo\domain\dal\mapper\xml\original\*.xml
del/f/s/q C:\workspace\mybatis-generator\demo-domain-model\src\main\java\demo\domain\model\entity\*.*

# 以下语句生成 mapper，分别针对 MySQL 的两个版本，执行时请注意 MySQL 的 driverClass 值。

# 针对 MySQL v8.x，执行前，请确保本文件中 driverClass 的值为：com.mysql.cj.jdbc.Driver
java -Dfile.encoding=UTF-8 -cp mybatis-generator-1.3.7.jar;mybatis-generator-enhance-mysql-v8.x.jar org.mybatis.generator.api.ShellRunner -configfile generatorConfig.xml -overwrite -verbose

# 针对 MySQL v5.7.x（理论上，v5.7 以前的版本也是支持的，没测试），执行前，请确保本文件中 driverClass 的值为：com.mysql.jdbc.Driver
java -Dfile.encoding=UTF-8 -cp mybatis-generator-1.3.7.jar;mybatis-generator-enhance-mysql-v5.7.x.jar org.mybatis.generator.api.ShellRunner -configfile generatorConfig.xml -overwrite -verbose

其中，-verbose 是打印执行过程，不加则没有。
-->